{"version":3,"sources":["../src/1.1.1.js"],"names":[],"mappings":";AACA;;;;;;;;;;;;;;;;;;;;;kBAkBe,UAAU,OAAV,EAAmB;;;QACzB,SAAwC,QAAxC,OADyB;QACjB,YAAgC,QAAhC,UADiB;QACN,SAAqB,QAArB,OADM;QACE,YAAa,QAAb,UADF;;AAE9B,QAAI,SAAS,mCAAe,OAAf,CAAT,CAF0B;AAG9B,QAAI,eAAe,EAAf,CAH0B;AAI9B,QAAI,YAAY,EAAZ,CAJ0B;;AAM9B,aAAS,YAAT,CAAsB,IAAtB,QAA+C;YAAlB,yBAAkB;YAAR,mBAAQ;;AAC3C,aAAK,OAAL,CAAa,iBAAqB;gBAAnB,kBAAmB;gBAAb,wBAAa;;AAC9B,oBAAQ,OAAR,CAAgB,iBAAS;AACrB,oBAAI,gBAAJ,CADqB;AAErB,oBAAI,QAAJ,EAAc;AACV,qGAA8E,MAAM,KAAN,oBAA9E,CADU;iBAAd,MAEO,IAAI,KAAJ,EAAW;AACd,sGAA+E,MAAM,KAAN,mBAA/E,CADc;iBAAX;AAGP,uBAAO,IAAP,EAAa,IAAI,SAAJ,CAAc,OAAd,EAAuB;AAChC,0BAAM,MAAM,UAAN,GAAmB,CAAnB;AACN,4BAAQ,MAAM,WAAN;iBAFC,CAAb,EAPqB;aAAT,CAAhB,CAD8B;SAArB,CAAb,CAD2C;KAA/C;;AAkBA,8CACK,OAAO,QAAP,cAAkB;AACf,uBAAe,EAAf,CADe;AAEf,oBAAY,EAAZ,CAFe;+BAIlB,OAAO,GAAP,YAAY,MAAK;;;AAGd,YAAI,OAAO,WAAP,CAAmB,IAAnB,EAAyB,CAAC,OAAO,IAAP,EAAa,OAAO,KAAP,EAAc,OAAO,UAAP,EAAmB,OAAO,QAAP,CAAxE,CAAJ,EAA+F;AAC3F,mBAD2F;SAA/F;;AAHc,YAOV,OAAO,WAAP,CAAmB,IAAnB,EAAyB,CAAC,OAAO,QAAP,CAA1B,CAAJ,EAAiD;AAC7C,mBAD6C;SAAjD;AAGA,YAAI,OAAO,UAAU,IAAV,CAAP,CAVU;AAWd,YAAI,cAAc,2CAAgB,IAAhB,CAAd,CAXU;AAYd,YAAI,YAAY,MAAZ,GAAqB,CAArB,EAAwB;AACxB,yBAAa,IAAb,CAAkB;AACd,sBAAM,IAAN;AACA,yBAAS,WAAT;aAFJ,EADwB;SAA5B;AAMA,YAAI,WAAW,wCAAa,IAAb,CAAX,CAlBU;AAmBd,YAAI,SAAS,MAAT,GAAkB,CAAlB,EAAqB;AACrB,sBAAU,IAAV,CAAe;AACX,sBAAM,IAAN;AACA,yBAAS,QAAT;aAFJ,EADqB;SAAzB;+BAOA,OAAO,QAAP,iCAAyB;AACzB,YAAI,gBAAgB,aAAa,MAAb,CAAoB,UAAC,KAAD;gBAAS;mBAAa,QAAQ,QAAQ,MAAR;SAA9B,EAA8C,CAAlE,CAAhB,CADqB;AAEzB,YAAI,aAAa,UAAU,MAAV,CAAiB,UAAC,KAAD;gBAAS;mBAAa,QAAQ,QAAQ,MAAR;SAA9B,EAA8C,CAA/D,CAAb,CAFqB;AAGzB,YAAI,kBAAkB,CAAlB,IAAuB,eAAe,CAAf,EAAkB;AACzC,mBADyC;SAA7C;AAGA,YAAI,gBAAgB,UAAhB,EAA4B;AAC5B,yBAAa,SAAb,EAAwB,EAAC,OAAO,IAAP,EAAzB,EAD4B;SAAhC,MAEO,IAAI,gBAAgB,UAAhB,EAA4B;AACnC,yBAAa,YAAb,EAA2B,EAAC,UAAU,IAAV,EAA5B,EADmC;SAAhC,MAEA;AACH,yBAAa,SAAb,EAAwB,EAAC,OAAO,IAAP,EAAzB,EADG;SAFA;aAvCf,CAxB8B;CAAnB;;AAFf;;AACA","file":"1.1.1.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n1.1.1.本文\n\n本文の文体は、敬体(ですます調)あるいは常体(である調)のどちらかで統一します。\n敬体と常体を混在させないようにします。\n敬体と常体のどちらを使うかは、文書の目的や読み手に応じて決めます。\n\n 敬体(ですます調)\n一般読者向けの紹介文、パンフレット、マニュアル、ウェブサイトの本文では、基本的に「敬体」を使います。\n親しみやすい、柔らかい雰囲気で内容を伝えることができます。\n\n 常体(である調)\n常体は、簡潔に、力強い雰囲気で内容を伝えることができる文体です\n丁寧ではない印象を読み手に与える場合があるため、通常、一般向けのマニュアルの本文では使われません。\n */\nimport {analyzeDesumasu, analyzeDearu} from \"analyze-desumasu-dearu\";\nimport {RuleHelper} from \"textlint-rule-helper\";\nexport default function (context) {\n    let {Syntax, RuleError, report, getSource} = context;\n    let helper = new RuleHelper(context);\n    let desumasuList = [];\n    let dearuList = [];\n\n    function reportResult(list, {desumasu, dearu}) {\n        list.forEach(({node, matches}) => {\n            matches.forEach(match => {\n                let message;\n                if (desumasu) {\n                    message = `本文を常体(である調)に統一して下さい。\\n本文の文体は、敬体(ですます調)あるいは常体(である調)のどちらかで統一します。\\n\"${match.value}\"が敬体(ですます調)です。`\n                } else if (dearu) {\n                    message = `本文を敬体(ですます調)に統一して下さい。\\n本文の文体は、敬体(ですます調)あるいは常体(である調)のどちらかで統一します。\\n\"${match.value}\"が常体(である調)です。`\n                }\n                report(node, new RuleError(message, {\n                    line: match.lineNumber - 1,\n                    column: match.columnIndex\n                }));\n            });\n        });\n    }\n\n\n    return {\n        [Syntax.Document](){\n            desumasuList = [];\n            dearuList = [];\n        },\n        [Syntax.Str](node){\n            // 本文以外は無視する\n            // => isUserWrittenNode\n            if (helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote, Syntax.Emphasis])) {\n                return;\n            }\n            // Listについては1.1.3. 箇条書きで扱う\n            if (helper.isChildNode(node, [Syntax.ListItem])) {\n                return;\n            }\n            let text = getSource(node);\n            let retDesumasu = analyzeDesumasu(text);\n            if (retDesumasu.length > 0) {\n                desumasuList.push({\n                    node: node,\n                    matches: retDesumasu\n                });\n            }\n            let retDearu = analyzeDearu(text);\n            if (retDearu.length > 0) {\n                dearuList.push({\n                    node: node,\n                    matches: retDearu\n                });\n            }\n        },\n        [`${Syntax.Document}:exit`](){\n            let desumasuCount = desumasuList.reduce((count, {matches}) => count + matches.length, 0);\n            let dearuCount = dearuList.reduce((count, {matches}) => count + matches.length, 0);\n            if (desumasuCount === 0 || dearuCount === 0) {\n                return;\n            }\n            if (desumasuCount > dearuCount) {\n                reportResult(dearuList, {dearu: true});\n            } else if (desumasuCount < dearuCount) {\n                reportResult(desumasuList, {desumasu: true});\n            } else {\n                reportResult(dearuList, {dearu: true});\n            }\n        }\n    }\n}"]}