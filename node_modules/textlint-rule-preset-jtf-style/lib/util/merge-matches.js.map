{"version":3,"sources":["../../src/util/merge-matches.js"],"names":[],"mappings":";AACA;;;;;kBACwB;AAAT,SAAS,YAAT,GAAmC;AAC9C,QAAM,UAAU,EAAV,CADwC;;sCAAV;;KAAU;;AAE9C,aAAS,OAAT,CAAiB,mBAAW;AACxB,gBAAQ,OAAR,CAAgB,uBAAe;AAC3B,gBAAM,cAAc,QAAQ,IAAR,CAAa,iBAAS;oBAC/B,OAAe,MAAf,KAD+B;oBACzB,QAAS,MAAT,MADyB;;AAEtC,uBAAO,YAAY,KAAZ,KAAsB,KAAtB,IAA+B,YAAY,IAAZ,KAAqB,IAArB,CAFA;aAAT,CAA3B,CADqB;AAK3B,gBAAI,CAAC,WAAD,EAAc;AACd,wBAAQ,IAAR,CAAa,WAAb,EADc;aAAlB;SALY,CAAhB,CADwB;KAAX,CAAjB,CAF8C;AAa9C,WAAO,OAAP,CAb8C;CAAnC","file":"merge-matches.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nexport default function mergeMatches(...aMatches) {\n    const results = [];\n    aMatches.forEach(matches => {\n        matches.forEach(targetMatch => {\n            const alreadyHave = results.some(match => {\n                const {text, index} = match;\n                return targetMatch.index === index && targetMatch.text === text;\n            });\n            if (!alreadyHave) {\n                results.push(targetMatch);\n            }\n        });\n    });\n    return results;\n}\n"]}