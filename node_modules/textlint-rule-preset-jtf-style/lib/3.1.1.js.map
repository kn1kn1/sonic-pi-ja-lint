{"version":3,"sources":["../src/3.1.1.js"],"names":[],"mappings":";AACA;;;;;;;;;;;;AAOA;;AACA;;;;AACA,SAAS,QAAT,CAAkB,OAAlB,EAA2B;QAClB,SAA+C,QAA/C,OADkB;QACV,YAAuC,QAAvC,UADU;QACC,SAA4B,QAA5B,OADD;QACS,QAAoB,QAApB,MADT;QACgB,YAAa,QAAb,UADhB;;AAEvB,+BACK,OAAO,GAAP,YAAY,MAAK;AACd,YAAI,CAAC,iCAAkB,IAAlB,EAAwB,OAAxB,CAAD,EAAmC;AACnC,mBADmC;SAAvC;AAGA,YAAI,OAAO,UAAU,IAAV,CAAP;;AAJU,YAMV,mBAAmB,sCAAqB,IAArB,EAA2B,qGAA3B,CAAnB,CANU;AAOd,YAAI,mBAAmB,sCAAqB,IAArB,EAA2B,qGAA3B,CAAnB,CAPU;AAQd,YAAM,cAAc,SAAd,WAAc,CAAC,KAAD,EAAW;gBACpB,QAAS,MAAT,MADoB;;AAE3B,mBAAO,IAAP,EAAa,IAAI,SAAJ,CAAc,+BAAd,EAA+C;AACxD,uBAAO,MAAM,KAAN;AACP,qBAAK,MAAM,gBAAN,CAAuB,CAAC,KAAD,EAAQ,QAAQ,CAAR,CAA/B,EAA2C,EAA3C,CAAL;aAFS,CAAb,EAF2B;SAAX,CARN;AAed,yBAAiB,OAAjB,CAAyB,WAAzB,EAfc;AAgBd,yBAAiB,OAAjB,CAAyB,WAAzB,EAhBc;MADtB,CAFuB;CAA3B;kBAuBe;AACX,YAAQ,QAAR;AACA,WAAO,QAAP","file":"3.1.1.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n3.1.1. 全角文字と半角文字の間\n原則として、全角文字と半角文字の間にスペースを入れません。\n\n。ただしカタカナ複合語の場合を除きます。「2.1.7 カタカナ複合語」を参照してください。\n */\nimport {isUserWrittenNode} from \"./util/node-util\";\nimport {matchCaptureGroupAll} from \"match-index\";\nfunction reporter(context) {\n    let {Syntax, RuleError, report, fixer, getSource} = context;\n    return {\n        [Syntax.Str](node){\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            let text = getSource(node);\n            // アルファベットと全角の間は半角スペースではない\n            let betweenHanAndZen = matchCaptureGroupAll(text, /[A-Za-z0-9]( )(?:[\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD87F][\\uDC00-\\uDFFF]|[ぁ-んァ-ヶ])/);\n            let betweenZenAndHan = matchCaptureGroupAll(text, /(?:[\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD87F][\\uDC00-\\uDFFF]|[ぁ-んァ-ヶ])( )[A-Za-z0-9]/);\n            const reportMatch = (match) => {\n                const {index} = match;\n                report(node, new RuleError(\"原則として、全角文字と半角文字の間にスペースを入れません。\", {\n                    index: match.index,\n                    fix: fixer.replaceTextRange([index, index + 1], \"\")\n                }));\n            };\n            betweenHanAndZen.forEach(reportMatch);\n            betweenZenAndHan.forEach(reportMatch);\n        }\n    }\n}\nexport default {\n    linter: reporter,\n    fixer: reporter\n}"]}