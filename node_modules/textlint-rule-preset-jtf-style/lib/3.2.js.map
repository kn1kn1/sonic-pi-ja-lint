{"version":3,"sources":["../src/3.2.js"],"names":[],"mappings":";AACA;;;;;;;;;;;kBASe,UAAU,OAAV,EAAmB;QACzB,SAAwC,QAAxC,OADyB;QACjB,YAAgC,QAAhC,UADiB;QACN,SAAqB,QAArB,OADM;QACE,YAAa,QAAb,UADF;;AAE9B,+BACK,OAAO,GAAP,YAAY,MAAK;AACd,YAAI,CAAC,iCAAkB,IAAlB,EAAwB,OAAxB,CAAD,EAAmC;AACnC,mBADmC;SAAvC;AAGA,YAAM,OAAO,UAAU,IAAV,CAAP;;AAJQ,6CAMd,CAAqB,IAArB,EAA2B,wBAA3B,EAAqD,OAArD,CAA6D,iBAAS;;gBAE3D,OAAQ,MAAR,KAF2D;;AAGlE,gBAAI,SAAS,GAAT,EAAc;AACd,uBAAO,IAAP,EAAa,IAAI,SAAJ,CAAc,sCAAd,EAAsD;AAC/D,2BAAO,MAAM,KAAN;iBADE,CAAb,EADc;aAAlB;SAHyD,CAA7D,CANc;MADtB,CAF8B;CAAnB;;AAHf;;AACA","file":"3.2.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n3.2.カタカナ語間のスペースの有無\n中黒または半角スペースを用いてカタカナ語を区切ります。\n「2.1.7 カタカナ複合語」を参照してください。\n */\nimport {isUserWrittenNode} from \"./util/node-util\";\nimport {matchCaptureGroupAll} from \"match-index\";\n\nexport default function (context) {\n    let {Syntax, RuleError, report, getSource} = context;\n    return {\n        [Syntax.Str](node){\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            // カタカナ(カタカナ以外)カタカナ のパターンを取り出す\n            matchCaptureGroupAll(text, /[ァ-ヶー]([^[ァ-ヶー])[ァ-ヶー]/).forEach(match => {\n                // カタカナの間を全角スペースでは区切らない\n                const {text} = match;\n                if (text === \"　\") {\n                    report(node, new RuleError(\"カタカナ語間は中黒（・）または半角スペースを用いてカタカナ語を区切ります\", {\n                        index: match.index\n                    }));\n                }\n            });\n\n        }\n    }\n}"]}